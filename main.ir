; ModuleID = 'main.bc'
source_filename = "MergeKSortedLists.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ListNode = type { i32, %struct.ListNode* }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl" }
%"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl" = type { %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data" }
%"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data" = type { %struct.ListNode**, %struct.ListNode**, %struct.ListNode** }
%class.Solution = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %struct.ListNode** }
%"struct.std::integral_constant" = type { i8 }

$_ZN8ListNodeC2Ei = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EE9push_backEOS1_ = comdat any

$_ZN8Solution11mergeKListsERSt6vectorIP8ListNodeSaIS2_EE = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EED2Ev = comdat any

$_ZNSt12_Vector_baseIP8ListNodeSaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIP8ListNodeEC2Ev = comdat any

$_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8ListNodeEC2Ev = comdat any

$_ZNKSt6vectorIP8ListNodeSaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EEixEm = comdat any

$_ZSt8_DestroyIPP8ListNodeS1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIP8ListNodeSaIS1_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZSt8_DestroyIPP8ListNodeEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPP8ListNodeEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIP8ListNodeEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8ListNodeE10deallocateEPS2_m = comdat any

$_ZNSaIP8ListNodeED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8ListNodeED2Ev = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRP8ListNodeEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIP8ListNodeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIP8ListNodeEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_ = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8ListNodeE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIP8ListNodeSaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZN9__gnu_cxxmiIPP8ListNodeSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EE5beginEv = comdat any

$_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE11_M_allocateEm = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPP8ListNodeSt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNKSt6vectorIP8ListNodeSaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EE11_S_max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIP8ListNodeSaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIP8ListNodeEE8max_sizeERKS2_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIP8ListNodeE8max_sizeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPP8ListNodeSt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt16allocator_traitsISaIP8ListNodeEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP8ListNodeE8allocateEmPKv = comdat any

$_ZNSt6vectorIP8ListNodeSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE = comdat any

$_ZSt12__relocate_aIPP8ListNodeS2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZSt14__relocate_a_1IP8ListNodeS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E = comdat any

$_ZSt12__niter_baseIPP8ListNodeET_S3_ = comdat any

@.str = private unnamed_addr constant [5 x i8] c"->%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"add value %d\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1

; Function Attrs: noinline norecurse optnone uwtable
define dso_local i32 @main() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca %struct.ListNode, align 8
  %3 = alloca %struct.ListNode, align 8
  %4 = alloca %struct.ListNode, align 8
  %5 = alloca %struct.ListNode, align 8
  %6 = alloca %struct.ListNode, align 8
  %7 = alloca %struct.ListNode, align 8
  %8 = alloca %struct.ListNode, align 8
  %9 = alloca %struct.ListNode, align 8
  %10 = alloca %"class.std::vector", align 8
  %11 = alloca %struct.ListNode*, align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = alloca %struct.ListNode*, align 8
  %15 = alloca %struct.ListNode*, align 8
  %16 = alloca %class.Solution, align 1
  %17 = alloca %struct.ListNode*, align 8
  store i32 0, i32* %1, align 4
  call void @_ZN8ListNodeC2Ei(%struct.ListNode* %2, i32 1)
  call void @_ZN8ListNodeC2Ei(%struct.ListNode* %3, i32 4)
  call void @_ZN8ListNodeC2Ei(%struct.ListNode* %4, i32 5)
  %18 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %3, i32 0, i32 1
  store %struct.ListNode* %4, %struct.ListNode** %18, align 8
  %19 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %2, i32 0, i32 1
  store %struct.ListNode* %3, %struct.ListNode** %19, align 8
  call void @_ZN8ListNodeC2Ei(%struct.ListNode* %5, i32 1)
  call void @_ZN8ListNodeC2Ei(%struct.ListNode* %6, i32 3)
  call void @_ZN8ListNodeC2Ei(%struct.ListNode* %7, i32 4)
  %20 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %6, i32 0, i32 1
  store %struct.ListNode* %7, %struct.ListNode** %20, align 8
  %21 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %5, i32 0, i32 1
  store %struct.ListNode* %6, %struct.ListNode** %21, align 8
  call void @_ZN8ListNodeC2Ei(%struct.ListNode* %8, i32 2)
  call void @_ZN8ListNodeC2Ei(%struct.ListNode* %9, i32 6)
  %22 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %8, i32 0, i32 1
  store %struct.ListNode* %9, %struct.ListNode** %22, align 8
  call void @_ZNSt6vectorIP8ListNodeSaIS1_EEC2Ev(%"class.std::vector"* %10) #9
  store %struct.ListNode* %2, %struct.ListNode** %11, align 8
  invoke void @_ZNSt6vectorIP8ListNodeSaIS1_EE9push_backEOS1_(%"class.std::vector"* %10, %struct.ListNode** dereferenceable(8) %11)
          to label %23 unwind label %40

23:                                               ; preds = %0
  store %struct.ListNode* %5, %struct.ListNode** %14, align 8
  invoke void @_ZNSt6vectorIP8ListNodeSaIS1_EE9push_backEOS1_(%"class.std::vector"* %10, %struct.ListNode** dereferenceable(8) %14)
          to label %24 unwind label %40

24:                                               ; preds = %23
  store %struct.ListNode* %8, %struct.ListNode** %15, align 8
  invoke void @_ZNSt6vectorIP8ListNodeSaIS1_EE9push_backEOS1_(%"class.std::vector"* %10, %struct.ListNode** dereferenceable(8) %15)
          to label %25 unwind label %40

25:                                               ; preds = %24
  %26 = invoke %struct.ListNode* @_ZN8Solution11mergeKListsERSt6vectorIP8ListNodeSaIS2_EE(%class.Solution* %16, %"class.std::vector"* dereferenceable(24) %10)
          to label %27 unwind label %40

27:                                               ; preds = %25
  store %struct.ListNode* %26, %struct.ListNode** %17, align 8
  br label %28

28:                                               ; preds = %36, %27
  %29 = load %struct.ListNode*, %struct.ListNode** %17, align 8
  %30 = icmp ne %struct.ListNode* %29, null
  br i1 %30, label %31, label %44

31:                                               ; preds = %28
  %32 = load %struct.ListNode*, %struct.ListNode** %17, align 8
  %33 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %32, i32 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %34)
          to label %36 unwind label %40

36:                                               ; preds = %31
  %37 = load %struct.ListNode*, %struct.ListNode** %17, align 8
  %38 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %37, i32 0, i32 1
  %39 = load %struct.ListNode*, %struct.ListNode** %38, align 8
  store %struct.ListNode* %39, %struct.ListNode** %17, align 8
  br label %28

40:                                               ; preds = %44, %31, %25, %24, %23, %0
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %12, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %13, align 4
  call void @_ZNSt6vectorIP8ListNodeSaIS1_EED2Ev(%"class.std::vector"* %10) #9
  br label %48

44:                                               ; preds = %28
  %45 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
          to label %46 unwind label %40

46:                                               ; preds = %44
  store i32 0, i32* %1, align 4
  call void @_ZNSt6vectorIP8ListNodeSaIS1_EED2Ev(%"class.std::vector"* %10) #9
  %47 = load i32, i32* %1, align 4
  ret i32 %47

48:                                               ; preds = %40
  %49 = load i8*, i8** %12, align 8
  %50 = load i32, i32* %13, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN8ListNodeC2Ei(%struct.ListNode* %0, i32 %1) unnamed_addr #1 comdat align 2 {
  %3 = alloca %struct.ListNode*, align 8
  %4 = alloca i32, align 4
  store %struct.ListNode* %0, %struct.ListNode** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.ListNode*, %struct.ListNode** %3, align 8
  %6 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %5, i32 0, i32 0
  %7 = load i32, i32* %4, align 4
  store i32 %7, i32* %6, align 8
  %8 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %5, i32 0, i32 1
  store %struct.ListNode* null, %struct.ListNode** %8, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8ListNodeSaIS1_EEC2Ev(%"class.std::vector"* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EEC2Ev(%"struct.std::_Vector_base"* %4) #9
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8ListNodeSaIS1_EE9push_backEOS1_(%"class.std::vector"* %0, %struct.ListNode** dereferenceable(8) %1) #2 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %struct.ListNode**, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %struct.ListNode**, %struct.ListNode*** %4, align 8
  %7 = call dereferenceable(8) %struct.ListNode** @_ZSt4moveIRP8ListNodeEONSt16remove_referenceIT_E4typeEOS4_(%struct.ListNode** dereferenceable(8) %6) #9
  call void @_ZNSt6vectorIP8ListNodeSaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector"* %5, %struct.ListNode** dereferenceable(8) %7)
  ret void
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %struct.ListNode* @_ZN8Solution11mergeKListsERSt6vectorIP8ListNodeSaIS2_EE(%class.Solution* %0, %"class.std::vector"* dereferenceable(24) %1) #2 comdat align 2 {
  %3 = alloca %struct.ListNode*, align 8
  %4 = alloca %class.Solution*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %struct.ListNode, align 8
  %7 = alloca %struct.ListNode*, align 8
  %8 = alloca %struct.ListNode*, align 8
  %9 = alloca i32, align 4
  store %class.Solution* %0, %class.Solution** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  %10 = load %class.Solution*, %class.Solution** %4, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE4sizeEv(%"class.std::vector"* %11) #9
  %13 = icmp ule i64 %12, 1
  br i1 %13, label %14, label %25

14:                                               ; preds = %2
  %15 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %16 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE4sizeEv(%"class.std::vector"* %15) #9
  %17 = icmp eq i64 %16, 1
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %20 = call dereferenceable(8) %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EEixEm(%"class.std::vector"* %19, i64 0) #9
  %21 = load %struct.ListNode*, %struct.ListNode** %20, align 8
  br label %23

22:                                               ; preds = %14
  br label %23

23:                                               ; preds = %22, %18
  %24 = phi %struct.ListNode* [ %21, %18 ], [ null, %22 ]
  store %struct.ListNode* %24, %struct.ListNode** %3, align 8
  br label %128

25:                                               ; preds = %2
  call void @_ZN8ListNodeC2Ei(%struct.ListNode* %6, i32 -2147483648)
  store %struct.ListNode* %6, %struct.ListNode** %7, align 8
  %26 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %27 = call dereferenceable(8) %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EEixEm(%"class.std::vector"* %26, i64 0) #9
  %28 = load %struct.ListNode*, %struct.ListNode** %27, align 8
  %29 = load %struct.ListNode*, %struct.ListNode** %7, align 8
  %30 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %29, i32 0, i32 1
  store %struct.ListNode* %28, %struct.ListNode** %30, align 8
  store i32 1, i32* %9, align 4
  br label %31

31:                                               ; preds = %122, %25
  %32 = load i32, i32* %9, align 4
  %33 = sext i32 %32 to i64
  %34 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %35 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE4sizeEv(%"class.std::vector"* %34) #9
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %37, label %125

37:                                               ; preds = %31
  store %struct.ListNode* %6, %struct.ListNode** %7, align 8
  br label %38

38:                                               ; preds = %120, %37
  %39 = load %struct.ListNode*, %struct.ListNode** %7, align 8
  %40 = icmp ne %struct.ListNode* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %38
  %42 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %43 = load i32, i32* %9, align 4
  %44 = sext i32 %43 to i64
  %45 = call dereferenceable(8) %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EEixEm(%"class.std::vector"* %42, i64 %44) #9
  %46 = load %struct.ListNode*, %struct.ListNode** %45, align 8
  %47 = icmp ne %struct.ListNode* %46, null
  br label %48

48:                                               ; preds = %41, %38
  %49 = phi i1 [ false, %38 ], [ %47, %41 ]
  br i1 %49, label %50, label %121

50:                                               ; preds = %48
  %51 = load %struct.ListNode*, %struct.ListNode** %7, align 8
  %52 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %51, i32 0, i32 1
  %53 = load %struct.ListNode*, %struct.ListNode** %52, align 8
  %54 = icmp ne %struct.ListNode* %53, null
  br i1 %54, label %55, label %112

55:                                               ; preds = %50
  %56 = load %struct.ListNode*, %struct.ListNode** %7, align 8
  %57 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %56, i32 0, i32 1
  %58 = load %struct.ListNode*, %struct.ListNode** %57, align 8
  %59 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %62 = load i32, i32* %9, align 4
  %63 = sext i32 %62 to i64
  %64 = call dereferenceable(8) %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EEixEm(%"class.std::vector"* %61, i64 %63) #9
  %65 = load %struct.ListNode*, %struct.ListNode** %64, align 8
  %66 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %60, %67
  br i1 %68, label %69, label %107

69:                                               ; preds = %55
  %70 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %71 = load i32, i32* %9, align 4
  %72 = sext i32 %71 to i64
  %73 = call dereferenceable(8) %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EEixEm(%"class.std::vector"* %70, i64 %72) #9
  %74 = load %struct.ListNode*, %struct.ListNode** %73, align 8
  %75 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 %76)
  %78 = load %struct.ListNode*, %struct.ListNode** %7, align 8
  %79 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %78, i32 0, i32 1
  %80 = load %struct.ListNode*, %struct.ListNode** %79, align 8
  store %struct.ListNode* %80, %struct.ListNode** %8, align 8
  %81 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %82 = load i32, i32* %9, align 4
  %83 = sext i32 %82 to i64
  %84 = call dereferenceable(8) %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EEixEm(%"class.std::vector"* %81, i64 %83) #9
  %85 = load %struct.ListNode*, %struct.ListNode** %84, align 8
  %86 = load %struct.ListNode*, %struct.ListNode** %7, align 8
  %87 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %86, i32 0, i32 1
  store %struct.ListNode* %85, %struct.ListNode** %87, align 8
  %88 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %89 = load i32, i32* %9, align 4
  %90 = sext i32 %89 to i64
  %91 = call dereferenceable(8) %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EEixEm(%"class.std::vector"* %88, i64 %90) #9
  %92 = load %struct.ListNode*, %struct.ListNode** %91, align 8
  %93 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %92, i32 0, i32 1
  %94 = load %struct.ListNode*, %struct.ListNode** %93, align 8
  %95 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %96 = load i32, i32* %9, align 4
  %97 = sext i32 %96 to i64
  %98 = call dereferenceable(8) %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EEixEm(%"class.std::vector"* %95, i64 %97) #9
  store %struct.ListNode* %94, %struct.ListNode** %98, align 8
  %99 = load %struct.ListNode*, %struct.ListNode** %8, align 8
  %100 = load %struct.ListNode*, %struct.ListNode** %7, align 8
  %101 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %100, i32 0, i32 1
  %102 = load %struct.ListNode*, %struct.ListNode** %101, align 8
  %103 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %102, i32 0, i32 1
  store %struct.ListNode* %99, %struct.ListNode** %103, align 8
  %104 = load %struct.ListNode*, %struct.ListNode** %7, align 8
  %105 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %104, i32 0, i32 1
  %106 = load %struct.ListNode*, %struct.ListNode** %105, align 8
  store %struct.ListNode* %106, %struct.ListNode** %7, align 8
  br label %111

107:                                              ; preds = %55
  %108 = load %struct.ListNode*, %struct.ListNode** %7, align 8
  %109 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %108, i32 0, i32 1
  %110 = load %struct.ListNode*, %struct.ListNode** %109, align 8
  store %struct.ListNode* %110, %struct.ListNode** %7, align 8
  br label %111

111:                                              ; preds = %107, %69
  br label %120

112:                                              ; preds = %50
  %113 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %114 = load i32, i32* %9, align 4
  %115 = sext i32 %114 to i64
  %116 = call dereferenceable(8) %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EEixEm(%"class.std::vector"* %113, i64 %115) #9
  %117 = load %struct.ListNode*, %struct.ListNode** %116, align 8
  %118 = load %struct.ListNode*, %struct.ListNode** %7, align 8
  %119 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %118, i32 0, i32 1
  store %struct.ListNode* %117, %struct.ListNode** %119, align 8
  br label %121

120:                                              ; preds = %111
  br label %38

121:                                              ; preds = %112, %48
  br label %122

122:                                              ; preds = %121
  %123 = load i32, i32* %9, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %9, align 4
  br label %31

125:                                              ; preds = %31
  %126 = getelementptr inbounds %struct.ListNode, %struct.ListNode* %6, i32 0, i32 1
  %127 = load %struct.ListNode*, %struct.ListNode** %126, align 8
  store %struct.ListNode* %127, %struct.ListNode** %3, align 8
  br label %128

128:                                              ; preds = %125, %23
  %129 = load %struct.ListNode*, %struct.ListNode** %3, align 8
  ret %struct.ListNode* %129
}

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8ListNodeSaIS1_EED2Ev(%"class.std::vector"* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %struct.ListNode**, %struct.ListNode*** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %12 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %14 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %13, i32 0, i32 1
  %15 = load %struct.ListNode**, %struct.ListNode*** %14, align 8
  %16 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %17 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %16) #9
  invoke void @_ZSt8_DestroyIPP8ListNodeS1_EvT_S3_RSaIT0_E(%struct.ListNode** %10, %struct.ListNode** %15, %"class.std::allocator"* dereferenceable(1) %17)
          to label %18 unwind label %20

18:                                               ; preds = %1
  %19 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EED2Ev(%"struct.std::_Vector_base"* %19) #9
  ret void

20:                                               ; preds = %1
  %21 = landingpad { i8*, i32 }
          catch i8* null
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %3, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %4, align 4
  %24 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EED2Ev(%"struct.std::_Vector_base"* %24) #9
  br label %25

25:                                               ; preds = %20
  %26 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %26) #10
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EEC2Ev(%"struct.std::_Vector_base"* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %0, %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"*, %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIP8ListNodeEC2Ev(%"class.std::allocator"* %4) #9
  %5 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %3 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  call void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %5) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIP8ListNodeEC2Ev(%"class.std::allocator"* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIP8ListNodeEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %0, %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"** %2, align 8
  %3 = load %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*, %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %3, i32 0, i32 0
  store %struct.ListNode** null, %struct.ListNode*** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %3, i32 0, i32 1
  store %struct.ListNode** null, %struct.ListNode*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %3, i32 0, i32 2
  store %struct.ListNode** null, %struct.ListNode*** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP8ListNodeEC2Ev(%"class.__gnu_cxx::new_allocator"* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE4sizeEv(%"class.std::vector"* %0) #1 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %5 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %6, i32 0, i32 1
  %8 = load %struct.ListNode**, %struct.ListNode*** %7, align 8
  %9 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %11, i32 0, i32 0
  %13 = load %struct.ListNode**, %struct.ListNode*** %12, align 8
  %14 = ptrtoint %struct.ListNode** %8 to i64
  %15 = ptrtoint %struct.ListNode** %13 to i64
  %16 = sub i64 %14, %15
  %17 = sdiv exact i64 %16, 8
  ret i64 %17
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EEixEm(%"class.std::vector"* %0, i64 %1) #1 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %7 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %8, i32 0, i32 0
  %10 = load %struct.ListNode**, %struct.ListNode*** %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = getelementptr inbounds %struct.ListNode*, %struct.ListNode** %10, i64 %11
  ret %struct.ListNode** %12
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPP8ListNodeS1_EvT_S3_RSaIT0_E(%struct.ListNode** %0, %struct.ListNode** %1, %"class.std::allocator"* dereferenceable(1) %2) #2 comdat {
  %4 = alloca %struct.ListNode**, align 8
  %5 = alloca %struct.ListNode**, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %struct.ListNode** %0, %struct.ListNode*** %4, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %struct.ListNode**, %struct.ListNode*** %4, align 8
  %8 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  call void @_ZSt8_DestroyIPP8ListNodeEvT_S3_(%struct.ListNode** %7, %struct.ListNode** %8)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %0) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EED2Ev(%"struct.std::_Vector_base"* %0) unnamed_addr #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %7, i32 0, i32 0
  %9 = load %struct.ListNode**, %struct.ListNode*** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %10 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %12 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %11, i32 0, i32 2
  %13 = load %struct.ListNode**, %struct.ListNode*** %12, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %14 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %15, i32 0, i32 0
  %17 = load %struct.ListNode**, %struct.ListNode*** %16, align 8
  %18 = ptrtoint %struct.ListNode** %13 to i64
  %19 = ptrtoint %struct.ListNode** %17 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 8
  invoke void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %5, %struct.ListNode** %9, i64 %21)
          to label %22 unwind label %24

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %23) #9
  ret void

24:                                               ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %28) #9
  br label %29

29:                                               ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #10
  unreachable
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) #4 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #9
  call void @_ZSt9terminatev() #10
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*)

declare dso_local void @_ZSt9terminatev()

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPP8ListNodeEvT_S3_(%struct.ListNode** %0, %struct.ListNode** %1) #2 comdat {
  %3 = alloca %struct.ListNode**, align 8
  %4 = alloca %struct.ListNode**, align 8
  store %struct.ListNode** %0, %struct.ListNode*** %3, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %4, align 8
  %5 = load %struct.ListNode**, %struct.ListNode*** %3, align 8
  %6 = load %struct.ListNode**, %struct.ListNode*** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPP8ListNodeEEvT_S5_(%struct.ListNode** %5, %struct.ListNode** %6)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPP8ListNodeEEvT_S5_(%struct.ListNode** %0, %struct.ListNode** %1) #1 comdat align 2 {
  %3 = alloca %struct.ListNode**, align 8
  %4 = alloca %struct.ListNode**, align 8
  store %struct.ListNode** %0, %struct.ListNode*** %3, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %4, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %0, %struct.ListNode** %1, i64 %2) #2 comdat align 2 {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca %struct.ListNode**, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %8 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  %9 = icmp ne %struct.ListNode** %8, null
  br i1 %9, label %10, label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %12 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %11 to %"class.std::allocator"*
  %13 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  %14 = load i64, i64* %6, align 8
  call void @_ZNSt16allocator_traitsISaIP8ListNodeEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1) %12, %struct.ListNode** %13, i64 %14)
  br label %15

15:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %0, %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"*, %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIP8ListNodeED2Ev(%"class.std::allocator"* %4) #9
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP8ListNodeEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1) %0, %struct.ListNode** %1, i64 %2) #2 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %struct.ListNode**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP8ListNodeE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* %8, %struct.ListNode** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP8ListNodeE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* %0, %struct.ListNode** %1, i64 %2) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %struct.ListNode**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  %9 = bitcast %struct.ListNode** %8 to i8*
  call void @_ZdlPv(i8* %9) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIP8ListNodeED2Ev(%"class.std::allocator"* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIP8ListNodeED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP8ListNodeED2Ev(%"class.__gnu_cxx::new_allocator"* %0) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8ListNodeSaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector"* %0, %struct.ListNode** dereferenceable(8) %1) #2 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %struct.ListNode**, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %4, align 8
  %6 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %7 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %8 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %9, i32 0, i32 1
  %11 = load %struct.ListNode**, %struct.ListNode*** %10, align 8
  %12 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %12, i32 0, i32 0
  %14 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %13 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %14, i32 0, i32 2
  %16 = load %struct.ListNode**, %struct.ListNode*** %15, align 8
  %17 = icmp ne %struct.ListNode** %11, %16
  br i1 %17, label %18, label %35

18:                                               ; preds = %2
  %19 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %22, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %23 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %24, i32 0, i32 1
  %26 = load %struct.ListNode**, %struct.ListNode*** %25, align 8
  %27 = load %struct.ListNode**, %struct.ListNode*** %4, align 8
  %28 = call dereferenceable(8) %struct.ListNode** @_ZSt7forwardIP8ListNodeEOT_RNSt16remove_referenceIS2_E4typeE(%struct.ListNode** dereferenceable(8) %27) #9
  call void @_ZNSt16allocator_traitsISaIP8ListNodeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %21, %struct.ListNode** %26, %struct.ListNode** dereferenceable(8) %28) #9
  %29 = bitcast %"class.std::vector"* %6 to %"struct.std::_Vector_base"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %30 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %31, i32 0, i32 1
  %33 = load %struct.ListNode**, %struct.ListNode*** %32, align 8
  %34 = getelementptr inbounds %struct.ListNode*, %struct.ListNode** %33, i32 1
  store %struct.ListNode** %34, %struct.ListNode*** %32, align 8
  br label %42

35:                                               ; preds = %2
  %36 = call %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EE3endEv(%"class.std::vector"* %6) #9
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %struct.ListNode** %36, %struct.ListNode*** %37, align 8
  %38 = load %struct.ListNode**, %struct.ListNode*** %4, align 8
  %39 = call dereferenceable(8) %struct.ListNode** @_ZSt7forwardIP8ListNodeEOT_RNSt16remove_referenceIS2_E4typeE(%struct.ListNode** dereferenceable(8) %38) #9
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %41 = load %struct.ListNode**, %struct.ListNode*** %40, align 8
  call void @_ZNSt6vectorIP8ListNodeSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector"* %6, %struct.ListNode** %41, %struct.ListNode** dereferenceable(8) %39)
  br label %42

42:                                               ; preds = %35, %18
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.ListNode** @_ZSt4moveIRP8ListNodeEONSt16remove_referenceIT_E4typeEOS4_(%struct.ListNode** dereferenceable(8) %0) #1 comdat {
  %2 = alloca %struct.ListNode**, align 8
  store %struct.ListNode** %0, %struct.ListNode*** %2, align 8
  %3 = load %struct.ListNode**, %struct.ListNode*** %2, align 8
  ret %struct.ListNode** %3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIP8ListNodeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %0, %struct.ListNode** %1, %struct.ListNode** dereferenceable(8) %2) #1 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %struct.ListNode**, align 8
  %6 = alloca %struct.ListNode**, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %5, align 8
  store %struct.ListNode** %2, %struct.ListNode*** %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  %10 = load %struct.ListNode**, %struct.ListNode*** %6, align 8
  %11 = call dereferenceable(8) %struct.ListNode** @_ZSt7forwardIP8ListNodeEOT_RNSt16remove_referenceIS2_E4typeE(%struct.ListNode** dereferenceable(8) %10) #9
  call void @_ZN9__gnu_cxx13new_allocatorIP8ListNodeE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %8, %struct.ListNode** %9, %struct.ListNode** dereferenceable(8) %11) #9
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.ListNode** @_ZSt7forwardIP8ListNodeEOT_RNSt16remove_referenceIS2_E4typeE(%struct.ListNode** dereferenceable(8) %0) #1 comdat {
  %2 = alloca %struct.ListNode**, align 8
  store %struct.ListNode** %0, %struct.ListNode*** %2, align 8
  %3 = load %struct.ListNode**, %struct.ListNode*** %2, align 8
  ret %struct.ListNode** %3
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIP8ListNodeSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_(%"class.std::vector"* %0, %struct.ListNode** %1, %struct.ListNode** dereferenceable(8) %2) #2 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %struct.ListNode**, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.ListNode**, align 8
  %9 = alloca %struct.ListNode**, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %struct.ListNode**, align 8
  %13 = alloca %struct.ListNode**, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %struct.ListNode** %1, %struct.ListNode*** %14, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store %struct.ListNode** %2, %struct.ListNode*** %6, align 8
  %15 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %16 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* %15, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0))
  store i64 %16, i64* %7, align 8
  %17 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %18 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %19, i32 0, i32 0
  %21 = load %struct.ListNode**, %struct.ListNode*** %20, align 8
  store %struct.ListNode** %21, %struct.ListNode*** %8, align 8
  %22 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %22, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %23 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %24, i32 0, i32 1
  %26 = load %struct.ListNode**, %struct.ListNode*** %25, align 8
  store %struct.ListNode** %26, %struct.ListNode*** %9, align 8
  %27 = call %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EE5beginEv(%"class.std::vector"* %15) #9
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %struct.ListNode** %27, %struct.ListNode*** %28, align 8
  %29 = call i64 @_ZN9__gnu_cxxmiIPP8ListNodeSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11) #9
  store i64 %29, i64* %10, align 8
  %30 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %31 = load i64, i64* %7, align 8
  %32 = call %struct.ListNode** @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %30, i64 %31)
  store %struct.ListNode** %32, %struct.ListNode*** %12, align 8
  %33 = load %struct.ListNode**, %struct.ListNode*** %12, align 8
  store %struct.ListNode** %33, %struct.ListNode*** %13, align 8
  %34 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %35 to %"class.std::allocator"*
  %37 = load %struct.ListNode**, %struct.ListNode*** %12, align 8
  %38 = load i64, i64* %10, align 8
  %39 = getelementptr inbounds %struct.ListNode*, %struct.ListNode** %37, i64 %38
  %40 = load %struct.ListNode**, %struct.ListNode*** %6, align 8
  %41 = call dereferenceable(8) %struct.ListNode** @_ZSt7forwardIP8ListNodeEOT_RNSt16remove_referenceIS2_E4typeE(%struct.ListNode** dereferenceable(8) %40) #9
  call void @_ZNSt16allocator_traitsISaIP8ListNodeEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %36, %struct.ListNode** %39, %struct.ListNode** dereferenceable(8) %41) #9
  store %struct.ListNode** null, %struct.ListNode*** %13, align 8
  %42 = load %struct.ListNode**, %struct.ListNode*** %8, align 8
  %43 = call dereferenceable(8) %struct.ListNode*** @_ZNK9__gnu_cxx17__normal_iteratorIPP8ListNodeSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %4) #9
  %44 = load %struct.ListNode**, %struct.ListNode*** %43, align 8
  %45 = load %struct.ListNode**, %struct.ListNode*** %12, align 8
  %46 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %47 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %46) #9
  %48 = call %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(%struct.ListNode** %42, %struct.ListNode** %44, %struct.ListNode** %45, %"class.std::allocator"* dereferenceable(1) %47) #9
  store %struct.ListNode** %48, %struct.ListNode*** %13, align 8
  %49 = load %struct.ListNode**, %struct.ListNode*** %13, align 8
  %50 = getelementptr inbounds %struct.ListNode*, %struct.ListNode** %49, i32 1
  store %struct.ListNode** %50, %struct.ListNode*** %13, align 8
  %51 = call dereferenceable(8) %struct.ListNode*** @_ZNK9__gnu_cxx17__normal_iteratorIPP8ListNodeSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %4) #9
  %52 = load %struct.ListNode**, %struct.ListNode*** %51, align 8
  %53 = load %struct.ListNode**, %struct.ListNode*** %9, align 8
  %54 = load %struct.ListNode**, %struct.ListNode*** %13, align 8
  %55 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %56 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %55) #9
  %57 = call %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(%struct.ListNode** %52, %struct.ListNode** %53, %struct.ListNode** %54, %"class.std::allocator"* dereferenceable(1) %56) #9
  store %struct.ListNode** %57, %struct.ListNode*** %13, align 8
  %58 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %59 = load %struct.ListNode**, %struct.ListNode*** %8, align 8
  %60 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %60, i32 0, i32 0
  %62 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %61 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %62, i32 0, i32 2
  %64 = load %struct.ListNode**, %struct.ListNode*** %63, align 8
  %65 = load %struct.ListNode**, %struct.ListNode*** %8, align 8
  %66 = ptrtoint %struct.ListNode** %64 to i64
  %67 = ptrtoint %struct.ListNode** %65 to i64
  %68 = sub i64 %66, %67
  %69 = sdiv exact i64 %68, 8
  call void @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %58, %struct.ListNode** %59, i64 %69)
  %70 = load %struct.ListNode**, %struct.ListNode*** %12, align 8
  %71 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %72 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %73, i32 0, i32 0
  store %struct.ListNode** %70, %struct.ListNode*** %74, align 8
  %75 = load %struct.ListNode**, %struct.ListNode*** %13, align 8
  %76 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %78 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %77 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %78, i32 0, i32 1
  store %struct.ListNode** %75, %struct.ListNode*** %79, align 8
  %80 = load %struct.ListNode**, %struct.ListNode*** %12, align 8
  %81 = load i64, i64* %7, align 8
  %82 = getelementptr inbounds %struct.ListNode*, %struct.ListNode** %80, i64 %81
  %83 = bitcast %"class.std::vector"* %15 to %"struct.std::_Vector_base"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %83, i32 0, i32 0
  %85 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %84 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %85, i32 0, i32 2
  store %struct.ListNode** %82, %struct.ListNode*** %86, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EE3endEv(%"class.std::vector"* %0) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %7, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPP8ListNodeSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %struct.ListNode*** dereferenceable(8) %8) #9
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %10 = load %struct.ListNode**, %struct.ListNode*** %9, align 8
  ret %struct.ListNode** %10
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIP8ListNodeE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %0, %struct.ListNode** %1, %struct.ListNode** dereferenceable(8) %2) #1 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %struct.ListNode**, align 8
  %6 = alloca %struct.ListNode**, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %5, align 8
  store %struct.ListNode** %2, %struct.ListNode*** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  %9 = bitcast %struct.ListNode** %8 to i8*
  %10 = bitcast i8* %9 to %struct.ListNode**
  %11 = load %struct.ListNode**, %struct.ListNode*** %6, align 8
  %12 = call dereferenceable(8) %struct.ListNode** @_ZSt7forwardIP8ListNodeEOT_RNSt16remove_referenceIS2_E4typeE(%struct.ListNode** dereferenceable(8) %11) #9
  %13 = load %struct.ListNode*, %struct.ListNode** %12, align 8
  store %struct.ListNode* %13, %struct.ListNode** %10, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* %0, i64 %1, i8* %2) #2 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %10 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE8max_sizeEv(%"class.std::vector"* %9) #9
  %11 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE4sizeEv(%"class.std::vector"* %9) #9
  %12 = sub i64 %10, %11
  %13 = load i64, i64* %5, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = load i8*, i8** %6, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %16) #11
  unreachable

17:                                               ; preds = %3
  %18 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE4sizeEv(%"class.std::vector"* %9) #9
  %19 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE4sizeEv(%"class.std::vector"* %9) #9
  store i64 %19, i64* %8, align 8
  %20 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %8, i64* dereferenceable(8) %5)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %18, %21
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE4sizeEv(%"class.std::vector"* %9) #9
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %30, label %26

26:                                               ; preds = %17
  %27 = load i64, i64* %7, align 8
  %28 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE8max_sizeEv(%"class.std::vector"* %9) #9
  %29 = icmp ugt i64 %27, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %26, %17
  %31 = call i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE8max_sizeEv(%"class.std::vector"* %9) #9
  br label %34

32:                                               ; preds = %26
  %33 = load i64, i64* %7, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %33, %32 ]
  ret i64 %35
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPP8ListNodeSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %0, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %1) #1 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %struct.ListNode*** @_ZNK9__gnu_cxx17__normal_iteratorIPP8ListNodeSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #9
  %7 = load %struct.ListNode**, %struct.ListNode*** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %struct.ListNode*** @_ZNK9__gnu_cxx17__normal_iteratorIPP8ListNodeSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #9
  %10 = load %struct.ListNode**, %struct.ListNode*** %9, align 8
  %11 = ptrtoint %struct.ListNode** %7 to i64
  %12 = ptrtoint %struct.ListNode** %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 8
  ret i64 %14
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EE5beginEv(%"class.std::vector"* %0) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %6 to %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data", %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl_data"* %7, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPP8ListNodeSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %struct.ListNode*** dereferenceable(8) %8) #9
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %10 = load %struct.ListNode**, %struct.ListNode*** %9, align 8
  ret %struct.ListNode** %10
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %struct.ListNode** @_ZNSt12_Vector_baseIP8ListNodeSaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %0, i64 %1) #2 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %9 to %"class.std::allocator"*
  %11 = load i64, i64* %4, align 8
  %12 = call %struct.ListNode** @_ZNSt16allocator_traitsISaIP8ListNodeEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1) %10, i64 %11)
  br label %14

13:                                               ; preds = %2
  br label %14

14:                                               ; preds = %13, %8
  %15 = phi %struct.ListNode** [ %12, %8 ], [ null, %13 ]
  ret %struct.ListNode** %15
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_(%struct.ListNode** %0, %struct.ListNode** %1, %struct.ListNode** %2, %"class.std::allocator"* dereferenceable(1) %3) #1 comdat align 2 {
  %5 = alloca %struct.ListNode**, align 8
  %6 = alloca %struct.ListNode**, align 8
  %7 = alloca %struct.ListNode**, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"struct.std::integral_constant", align 1
  store %struct.ListNode** %0, %struct.ListNode*** %5, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %6, align 8
  store %struct.ListNode** %2, %struct.ListNode*** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %10 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  %11 = load %struct.ListNode**, %struct.ListNode*** %6, align 8
  %12 = load %struct.ListNode**, %struct.ListNode*** %7, align 8
  %13 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %14 = call %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE(%struct.ListNode** %10, %struct.ListNode** %11, %struct.ListNode** %12, %"class.std::allocator"* dereferenceable(1) %13) #9
  ret %struct.ListNode** %14
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %struct.ListNode*** @_ZNK9__gnu_cxx17__normal_iteratorIPP8ListNodeSt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %0) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %struct.ListNode*** %4
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIP8ListNodeSaIS1_EE8max_sizeEv(%"class.std::vector"* %0) #1 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIP8ListNodeSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #9
  %6 = call i64 @_ZNSt6vectorIP8ListNodeSaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator"* dereferenceable(1) %5) #9
  ret i64 %6
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) #6

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) #1 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = load i64*, i64** %5, align 8
  store i64* %12, i64** %3, align 8
  br label %15

13:                                               ; preds = %2
  %14 = load i64*, i64** %4, align 8
  store i64* %14, i64** %3, align 8
  br label %15

15:                                               ; preds = %13, %11
  %16 = load i64*, i64** %3, align 8
  ret i64* %16
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt6vectorIP8ListNodeSaIS1_EE11_S_max_sizeERKS2_(%"class.std::allocator"* dereferenceable(1) %0) #1 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::allocator"*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  store i64 1152921504606846975, i64* %3, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %6 = call i64 @_ZNSt16allocator_traitsISaIP8ListNodeEE8max_sizeERKS2_(%"class.std::allocator"* dereferenceable(1) %5) #9
  store i64 %6, i64* %4, align 8
  %7 = invoke dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %3, i64* dereferenceable(8) %4)
          to label %8 unwind label %10

8:                                                ; preds = %1
  %9 = load i64, i64* %7, align 8
  ret i64 %9

10:                                               ; preds = %1
  %11 = landingpad { i8*, i32 }
          catch i8* null
  %12 = extractvalue { i8*, i32 } %11, 0
  call void @__clang_call_terminate(i8* %12) #10
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIP8ListNodeSaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %0) #1 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<ListNode *, std::allocator<ListNode *> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIP8ListNodeEE8max_sizeERKS2_(%"class.std::allocator"* dereferenceable(1) %0) #1 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP8ListNodeE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #9
  ret i64 %5
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) #1 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %8, align 8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = load i64*, i64** %5, align 8
  store i64* %12, i64** %3, align 8
  br label %15

13:                                               ; preds = %2
  %14 = load i64*, i64** %4, align 8
  store i64* %14, i64** %3, align 8
  br label %15

15:                                               ; preds = %13, %11
  %16 = load i64*, i64** %3, align 8
  ret i64* %16
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIP8ListNodeE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %0) #1 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPP8ListNodeSt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %0, %struct.ListNode*** dereferenceable(8) %1) unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %struct.ListNode***, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %struct.ListNode*** %1, %struct.ListNode**** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %struct.ListNode***, %struct.ListNode**** %4, align 8
  %8 = load %struct.ListNode**, %struct.ListNode*** %7, align 8
  store %struct.ListNode** %8, %struct.ListNode*** %6, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %struct.ListNode** @_ZNSt16allocator_traitsISaIP8ListNodeEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1) %0, i64 %1) #2 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.ListNode** @_ZN9__gnu_cxx13new_allocatorIP8ListNodeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %struct.ListNode** %8
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %struct.ListNode** @_ZN9__gnu_cxx13new_allocatorIP8ListNodeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %0, i64 %1, i8* %2) #2 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP8ListNodeE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %7) #9
  %10 = icmp ugt i64 %8, %9
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @_ZSt17__throw_bad_allocv() #11
  unreachable

12:                                               ; preds = %3
  %13 = load i64, i64* %5, align 8
  %14 = mul i64 %13, 8
  %15 = call i8* @_Znwm(i64 %14)
  %16 = bitcast i8* %15 to %struct.ListNode**
  ret %struct.ListNode** %16
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() #6

; Function Attrs: nobuiltin
declare dso_local noalias i8* @_Znwm(i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.ListNode** @_ZNSt6vectorIP8ListNodeSaIS1_EE14_S_do_relocateEPS1_S4_S4_RS2_St17integral_constantIbLb1EE(%struct.ListNode** %0, %struct.ListNode** %1, %struct.ListNode** %2, %"class.std::allocator"* dereferenceable(1) %3) #1 comdat align 2 {
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %struct.ListNode**, align 8
  %7 = alloca %struct.ListNode**, align 8
  %8 = alloca %struct.ListNode**, align 8
  %9 = alloca %"class.std::allocator"*, align 8
  store %struct.ListNode** %0, %struct.ListNode*** %6, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %7, align 8
  store %struct.ListNode** %2, %struct.ListNode*** %8, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %9, align 8
  %10 = load %struct.ListNode**, %struct.ListNode*** %6, align 8
  %11 = load %struct.ListNode**, %struct.ListNode*** %7, align 8
  %12 = load %struct.ListNode**, %struct.ListNode*** %8, align 8
  %13 = load %"class.std::allocator"*, %"class.std::allocator"** %9, align 8
  %14 = call %struct.ListNode** @_ZSt12__relocate_aIPP8ListNodeS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.ListNode** %10, %struct.ListNode** %11, %struct.ListNode** %12, %"class.std::allocator"* dereferenceable(1) %13) #9
  ret %struct.ListNode** %14
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.ListNode** @_ZSt12__relocate_aIPP8ListNodeS2_SaIS1_EET0_T_S5_S4_RT1_(%struct.ListNode** %0, %struct.ListNode** %1, %struct.ListNode** %2, %"class.std::allocator"* dereferenceable(1) %3) #1 comdat {
  %5 = alloca %struct.ListNode**, align 8
  %6 = alloca %struct.ListNode**, align 8
  %7 = alloca %struct.ListNode**, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store %struct.ListNode** %0, %struct.ListNode*** %5, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %6, align 8
  store %struct.ListNode** %2, %struct.ListNode*** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  %10 = call %struct.ListNode** @_ZSt12__niter_baseIPP8ListNodeET_S3_(%struct.ListNode** %9) #9
  %11 = load %struct.ListNode**, %struct.ListNode*** %6, align 8
  %12 = call %struct.ListNode** @_ZSt12__niter_baseIPP8ListNodeET_S3_(%struct.ListNode** %11) #9
  %13 = load %struct.ListNode**, %struct.ListNode*** %7, align 8
  %14 = call %struct.ListNode** @_ZSt12__niter_baseIPP8ListNodeET_S3_(%struct.ListNode** %13) #9
  %15 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %16 = call %struct.ListNode** @_ZSt14__relocate_a_1IP8ListNodeS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E(%struct.ListNode** %10, %struct.ListNode** %12, %struct.ListNode** %14, %"class.std::allocator"* dereferenceable(1) %15) #9
  ret %struct.ListNode** %16
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.ListNode** @_ZSt14__relocate_a_1IP8ListNodeS1_ENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS3_E4typeES4_S4_S4_RSaIT0_E(%struct.ListNode** %0, %struct.ListNode** %1, %struct.ListNode** %2, %"class.std::allocator"* dereferenceable(1) %3) #1 comdat {
  %5 = alloca %struct.ListNode**, align 8
  %6 = alloca %struct.ListNode**, align 8
  %7 = alloca %struct.ListNode**, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca i64, align 8
  store %struct.ListNode** %0, %struct.ListNode*** %5, align 8
  store %struct.ListNode** %1, %struct.ListNode*** %6, align 8
  store %struct.ListNode** %2, %struct.ListNode*** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %10 = load %struct.ListNode**, %struct.ListNode*** %6, align 8
  %11 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  %12 = ptrtoint %struct.ListNode** %10 to i64
  %13 = ptrtoint %struct.ListNode** %11 to i64
  %14 = sub i64 %12, %13
  %15 = sdiv exact i64 %14, 8
  store i64 %15, i64* %9, align 8
  %16 = load i64, i64* %9, align 8
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %4
  %19 = load %struct.ListNode**, %struct.ListNode*** %7, align 8
  %20 = bitcast %struct.ListNode** %19 to i8*
  %21 = load %struct.ListNode**, %struct.ListNode*** %5, align 8
  %22 = bitcast %struct.ListNode** %21 to i8*
  %23 = load i64, i64* %9, align 8
  %24 = mul i64 %23, 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %22, i64 %24, i1 false)
  br label %25

25:                                               ; preds = %18, %4
  %26 = load %struct.ListNode**, %struct.ListNode*** %7, align 8
  %27 = load i64, i64* %9, align 8
  %28 = getelementptr inbounds %struct.ListNode*, %struct.ListNode** %26, i64 %27
  ret %struct.ListNode** %28
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %struct.ListNode** @_ZSt12__niter_baseIPP8ListNodeET_S3_(%struct.ListNode** %0) #1 comdat {
  %2 = alloca %struct.ListNode**, align 8
  store %struct.ListNode** %0, %struct.ListNode*** %2, align 8
  %3 = load %struct.ListNode**, %struct.ListNode*** %2, align 8
  ret %struct.ListNode** %3
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #8

attributes #0 = { noinline norecurse optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline noreturn nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0 (http://github.com/llvm/llvm-project.git 9d5ad5e45fe40a24ceb11d6f9b046d8077c90778)"}
